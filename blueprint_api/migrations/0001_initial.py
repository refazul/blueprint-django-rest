# Generated by Django 5.2.6 on 2025-09-25 08:08

import blueprint_api.storages
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('raw_address', models.TextField(verbose_name='Raw Address (from order)')),
                ('formatted_address', models.TextField(blank=True, null=True, verbose_name='Formatted Clean Address')),
                ('district', models.CharField(blank=True, choices=[('dhaka', 'ঢাকা'), ('chittagong', 'চট্টগ্রাম'), ('rajshahi', 'রাজশাহী'), ('khulna', 'খুলনা'), ('barisal', 'বরিশাল'), ('sylhet', 'সিলেট'), ('rangpur', 'রংপুর'), ('mymensingh', 'ময়মনসিংহ'), ('comilla', 'কুমিল্লা'), ('feni', 'ফেনী'), ('brahmanbaria', 'ব্রাহ্মণবাড়িয়া'), ('noakhali', 'নোয়াখালী'), ('chandpur', 'চাঁদপুর'), ('lakshmipur', 'লক্ষ্মীপুর'), ('coxsbazar', 'কক্সবাজার'), ('rangamati', 'রাঙ্গামাটি'), ('bandarban', 'বান্দরবান'), ('khagrachhari', 'খাগড়াছড়ি')], max_length=50, null=True, verbose_name='জেলা')),
                ('thana', models.CharField(blank=True, max_length=50, null=True, verbose_name='থানা')),
                ('phone', models.CharField(blank=True, max_length=20, unique=True)),
                ('fraud_report_count', models.PositiveIntegerField(default=0)),
                ('success_count', models.PositiveIntegerField(default=0)),
                ('cancellation_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
            },
        ),
        migrations.CreateModel(
            name='SiteConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cod_enabled', models.BooleanField(default=True, help_text='Enable Cash on Delivery')),
                ('free_delivery_text', models.CharField(default='ফ্রি ডেলিভারি + ক্যাশ অন ডেলিভারি', help_text='Text to display for free delivery offer', max_length=160)),
                ('return_policy_text', models.CharField(default='পছন্দ না হলে সহজ রিটার্ন', help_text='Return policy text', max_length=160)),
                ('authentic_text', models.CharField(default='১০০% আসল প্রোডাক্ট, গ্যারান্টি সহ', help_text='Authenticity guarantee text', max_length=160)),
                ('guarantee_text', models.CharField(default='৭ দিনের রিপ্লেসমেন্ট গ্যারান্টি', help_text='Guarantee/warranty text', max_length=160)),
                ('support_phone', models.CharField(default='+8801XXXXXXXXX', help_text='Customer support phone number', max_length=40)),
                ('support_whatsapp', models.CharField(blank=True, default='', help_text='WhatsApp number for customer support', max_length=40)),
                ('trust_badges', models.JSONField(blank=True, default=list, help_text="Trust badges/icons. Format: [{'name': 'Badge Name', 'icon': 'icon-class', 'text': 'Badge text'}]")),
                ('shipping_notice', models.CharField(default='ঢাকার ভিতরে 24-48 ঘন্টায় ডেলিভারি', help_text='Shipping time notice', max_length=160)),
                ('cta_text', models.CharField(default='এখনই অর্ডার করুন', help_text='Call-to-action button text', max_length=60)),
                ('enable_countdown', models.BooleanField(default=False, help_text='Enable countdown timer')),
                ('countdown_end_date', models.DateTimeField(blank=True, help_text='Countdown end date/time', null=True)),
                ('countdown_text', models.CharField(blank=True, default='অফার শেষ হতে বাকি', help_text='Text to show before countdown', max_length=100)),
                ('enable_stock_counter', models.BooleanField(default=False, help_text='Enable stock counter display')),
                ('stock_counter_text', models.CharField(blank=True, default='স্টকে আছে মাত্র', help_text='Text to show before stock count', max_length=80)),
                ('enable_social_proof', models.BooleanField(default=True, help_text='Enable social proof notifications')),
                ('social_proof_interval', models.PositiveIntegerField(default=8000, help_text='Interval between social proof notifications (milliseconds)')),
            ],
            options={
                'verbose_name': 'Site Configuration',
                'verbose_name_plural': 'Site Configuration',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('slug', models.CharField(blank=True, max_length=500, unique=True)),
                ('contact_info', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('slug', models.SlugField(blank=True, max_length=500, unique=True)),
                ('image', models.ImageField(blank=True, help_text='Main category image (uploaded file)', max_length=600, null=True, storage=blueprint_api.storages.PassthroughURLStorage(), upload_to='categories/')),
                ('image_url', models.URLField(blank=True, help_text='Main category image URL (takes precedence over uploaded file)', max_length=600, null=True)),
                ('description', models.TextField(blank=True, help_text='Category description', null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='blueprint_api.category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='CategoryAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=150, unique=True)),
                ('is_required', models.BooleanField(default=False)),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='blueprint_api.category')),
            ],
            options={
                'ordering': ['display_order', 'name'],
                'unique_together': {('category', 'name')},
            },
        ),
        migrations.CreateModel(
            name='CategoryAttributeChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='blueprint_api.categoryattribute')),
            ],
            options={
                'ordering': ['display_order', 'value'],
                'unique_together': {('attribute', 'value')},
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('slug', models.SlugField(blank=True, max_length=500, unique=True)),
                ('unit', models.CharField(choices=[('pc', 'পিস'), ('kg', 'কেজি'), ('ltr', 'লিটার'), ('gm', 'গ্রাম'), ('yd', 'গজ'), ('m', 'মিটার'), ('cm', 'সেন্টিমিটার'), ('mm', 'মিলিমিটার')], default='pc', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('hero_headline', models.CharField(blank=True, default='', help_text='Main headline for product landing page', max_length=150)),
                ('hero_subheadline', models.CharField(blank=True, default='', help_text='Supporting subheadline for product landing page', max_length=220)),
                ('benefits', models.JSONField(blank=True, default=list, help_text="List of product benefits. Format: [{'title': 'Benefit Title', 'description': 'Benefit description'}]")),
                ('emotional_pitch', models.TextField(blank=True, default='', help_text='Emotional appeal text to connect with customers')),
                ('testimonials', models.JSONField(blank=True, default=list, help_text="Customer testimonials. Format: [{'name': 'Customer Name', 'text': 'Testimonial text', 'rating': 5, 'location': 'Dhaka'}]")),
                ('categories', models.ManyToManyField(related_name='products', to='blueprint_api.category')),
            ],
        ),
        migrations.CreateModel(
            name='ProductVariation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('sku', models.CharField(max_length=500, unique=True)),
                ('image', models.ImageField(blank=True, max_length=600, null=True, storage=blueprint_api.storages.PassthroughURLStorage(), upload_to='product_variations/')),
                ('url', models.CharField(blank=True, max_length=500, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_crawling_enabled', models.BooleanField(default=True, help_text='Enable automatic price crawling for this variation')),
                ('last_crawled_at', models.DateTimeField(blank=True, help_text='Last time price was successfully crawled', null=True)),
                ('crawl_error_count', models.PositiveIntegerField(default=0, help_text='Number of consecutive crawl errors')),
                ('last_crawl_error', models.TextField(blank=True, help_text='Last crawl error message', null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variations', to='blueprint_api.product')),
            ],
        ),
        migrations.CreateModel(
            name='PriceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('notes', models.CharField(blank=True, max_length=200, null=True)),
                ('variation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_entries', to='blueprint_api.productvariation')),
            ],
            options={
                'verbose_name': 'Price History',
                'verbose_name_plural': 'Price Histories',
                'ordering': ['-date_time'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='blueprint_api.customer')),
                ('variation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blueprint_api.productvariation')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ['-order_date'],
            },
        ),
        migrations.CreateModel(
            name='RetailSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('retail_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sale_date', models.DateField(default=django.utils.timezone.now)),
                ('variation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blueprint_api.productvariation')),
            ],
        ),
        migrations.CreateModel(
            name='StockEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('purchase_date', models.DateField(default=django.utils.timezone.now)),
                ('receipt_info', models.TextField(blank=True, null=True)),
                ('variation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blueprint_api.productvariation')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blueprint_api.supplier')),
            ],
            options={
                'verbose_name': 'Stock Entry',
                'verbose_name_plural': 'Stock Entries',
            },
        ),
        migrations.CreateModel(
            name='CategoryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Descriptive name for the image', max_length=200)),
                ('image', models.ImageField(blank=True, help_text='Category image file (uploaded file)', max_length=600, null=True, storage=blueprint_api.storages.PassthroughURLStorage(), upload_to='categories/')),
                ('image_url', models.URLField(blank=True, help_text='Category image URL (takes precedence over uploaded file)', max_length=600, null=True)),
                ('alt_text', models.CharField(blank=True, help_text='Alternative text for accessibility', max_length=300, null=True)),
                ('display_order', models.PositiveIntegerField(default=0, help_text='Order for displaying images')),
                ('is_featured', models.BooleanField(default=False, help_text='Mark as featured image for the category')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='blueprint_api.category')),
            ],
            options={
                'verbose_name': 'Category Image',
                'verbose_name_plural': 'Category Images',
                'ordering': ['display_order', 'created_at'],
                'unique_together': {('category', 'name')},
            },
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blueprint_api.categoryattribute')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='blueprint_api.product')),
                ('selected_choices', models.ManyToManyField(related_name='product_attributes', to='blueprint_api.categoryattributechoice')),
            ],
            options={
                'unique_together': {('product', 'category_attribute')},
            },
        ),
    ]
